// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sys/rpc-domainevents/pb/protos.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InsertDomainEventRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertDomainEventRequest) Reset()         { *m = InsertDomainEventRequest{} }
func (m *InsertDomainEventRequest) String() string { return proto.CompactTextString(m) }
func (*InsertDomainEventRequest) ProtoMessage()    {}
func (*InsertDomainEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a91133a6228ed4df, []int{0}
}

func (m *InsertDomainEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertDomainEventRequest.Unmarshal(m, b)
}
func (m *InsertDomainEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertDomainEventRequest.Marshal(b, m, deterministic)
}
func (m *InsertDomainEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertDomainEventRequest.Merge(m, src)
}
func (m *InsertDomainEventRequest) XXX_Size() int {
	return xxx_messageInfo_InsertDomainEventRequest.Size(m)
}
func (m *InsertDomainEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertDomainEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertDomainEventRequest proto.InternalMessageInfo

func (m *InsertDomainEventRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *InsertDomainEventRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InsertDomainEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertDomainEventResponse) Reset()         { *m = InsertDomainEventResponse{} }
func (m *InsertDomainEventResponse) String() string { return proto.CompactTextString(m) }
func (*InsertDomainEventResponse) ProtoMessage()    {}
func (*InsertDomainEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a91133a6228ed4df, []int{1}
}

func (m *InsertDomainEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertDomainEventResponse.Unmarshal(m, b)
}
func (m *InsertDomainEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertDomainEventResponse.Marshal(b, m, deterministic)
}
func (m *InsertDomainEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertDomainEventResponse.Merge(m, src)
}
func (m *InsertDomainEventResponse) XXX_Size() int {
	return xxx_messageInfo_InsertDomainEventResponse.Size(m)
}
func (m *InsertDomainEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertDomainEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertDomainEventResponse proto.InternalMessageInfo

type ScanRequest struct {
	Pointer              uint32   `protobuf:"varint,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	After                int64    `protobuf:"varint,2,opt,name=after,proto3" json:"after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a91133a6228ed4df, []int{2}
}

func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetPointer() uint32 {
	if m != nil {
		return m.Pointer
	}
	return 0
}

func (m *ScanRequest) GetAfter() int64 {
	if m != nil {
		return m.After
	}
	return 0
}

type ScanResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Date                 int64    `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a91133a6228ed4df, []int{3}
}

func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (m *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(m, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ScanResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ScanResponse) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func init() {
	proto.RegisterType((*InsertDomainEventRequest)(nil), "InsertDomainEventRequest")
	proto.RegisterType((*InsertDomainEventResponse)(nil), "InsertDomainEventResponse")
	proto.RegisterType((*ScanRequest)(nil), "ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "ScanResponse")
}

func init() {
	proto.RegisterFile("sys/rpc-domainevents/pb/protos.proto", fileDescriptor_a91133a6228ed4df)
}

var fileDescriptor_a91133a6228ed4df = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x37, 0x6d, 0x55, 0x1c, 0xbb, 0x82, 0xc1, 0x43, 0xb6, 0x5e, 0x96, 0xe0, 0xa1, 0x1e,
	0x4c, 0x45, 0xcf, 0x5e, 0x16, 0x15, 0x04, 0x4f, 0xf1, 0xe6, 0x2d, 0xdd, 0x46, 0xe8, 0xc1, 0x24,
	0x76, 0xa2, 0xb0, 0xbf, 0xc0, 0xbf, 0x2d, 0x99, 0xba, 0x50, 0x70, 0xf7, 0x94, 0x97, 0xc7, 0x9b,
	0xc7, 0x37, 0x03, 0x97, 0xb8, 0xc1, 0x66, 0x08, 0xeb, 0xeb, 0xce, 0x7f, 0x98, 0xde, 0xd9, 0x6f,
	0xeb, 0x22, 0x36, 0xa1, 0x6d, 0xc2, 0xe0, 0xa3, 0x47, 0x45, 0x8f, 0x5c, 0x81, 0x78, 0x76, 0x68,
	0x87, 0xf8, 0x40, 0xa9, 0xc7, 0x94, 0xd2, 0xf6, 0xf3, 0xcb, 0x62, 0xe4, 0x1c, 0x8a, 0xb8, 0x09,
	0x56, 0xb0, 0x25, 0xab, 0x8f, 0x35, 0xe9, 0xe4, 0x75, 0x26, 0x1a, 0x91, 0x2d, 0x59, 0x5d, 0x6a,
	0xd2, 0xf2, 0x02, 0x16, 0x3b, 0x3a, 0x30, 0x78, 0x87, 0x56, 0xde, 0xc3, 0xc9, 0xeb, 0xda, 0xb8,
	0x6d, 0xa7, 0x80, 0xa3, 0xe0, 0x7b, 0x17, 0xed, 0x40, 0xb5, 0x73, 0xbd, 0xfd, 0xf2, 0x73, 0x38,
	0x30, 0xef, 0xc9, 0x4f, 0xd5, 0xb9, 0x1e, 0x3f, 0xf2, 0x09, 0xca, 0x71, 0x7c, 0xac, 0xe3, 0xa7,
	0x90, 0xf5, 0x1d, 0x8d, 0xe6, 0x3a, 0xeb, 0xbb, 0x5d, 0x3c, 0x7f, 0x9e, 0x15, 0x39, 0xa5, 0x48,
	0xdf, 0xfe, 0x30, 0x28, 0x27, 0x78, 0xc8, 0x5f, 0xe0, 0xec, 0x1f, 0x34, 0x5f, 0xa8, 0x7d, 0xc7,
	0xa8, 0x2a, 0xb5, 0x7f, 0xc7, 0x19, 0xbf, 0x82, 0x22, 0x61, 0xf2, 0x52, 0x4d, 0x96, 0xad, 0xe6,
	0x6a, 0xca, 0x2e, 0x67, 0x35, 0xbb, 0x61, 0xab, 0xe2, 0x2d, 0x0b, 0x6d, 0x7b, 0x48, 0xe7, 0xbf,
	0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x80, 0x55, 0xf3, 0xa6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DomainEventsClient is the client API for DomainEvents service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DomainEventsClient interface {
	InsertDomainEvent(ctx context.Context, in *InsertDomainEventRequest, opts ...grpc.CallOption) (*InsertDomainEventResponse, error)
	Scan(ctx context.Context, opts ...grpc.CallOption) (DomainEvents_ScanClient, error)
}

type domainEventsClient struct {
	cc *grpc.ClientConn
}

func NewDomainEventsClient(cc *grpc.ClientConn) DomainEventsClient {
	return &domainEventsClient{cc}
}

func (c *domainEventsClient) InsertDomainEvent(ctx context.Context, in *InsertDomainEventRequest, opts ...grpc.CallOption) (*InsertDomainEventResponse, error) {
	out := new(InsertDomainEventResponse)
	err := c.cc.Invoke(ctx, "/DomainEvents/InsertDomainEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainEventsClient) Scan(ctx context.Context, opts ...grpc.CallOption) (DomainEvents_ScanClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DomainEvents_serviceDesc.Streams[0], "/DomainEvents/Scan", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainEventsScanClient{stream}
	return x, nil
}

type DomainEvents_ScanClient interface {
	Send(*ScanRequest) error
	Recv() (*ScanResponse, error)
	grpc.ClientStream
}

type domainEventsScanClient struct {
	grpc.ClientStream
}

func (x *domainEventsScanClient) Send(m *ScanRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *domainEventsScanClient) Recv() (*ScanResponse, error) {
	m := new(ScanResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DomainEventsServer is the server API for DomainEvents service.
type DomainEventsServer interface {
	InsertDomainEvent(context.Context, *InsertDomainEventRequest) (*InsertDomainEventResponse, error)
	Scan(DomainEvents_ScanServer) error
}

func RegisterDomainEventsServer(s *grpc.Server, srv DomainEventsServer) {
	s.RegisterService(&_DomainEvents_serviceDesc, srv)
}

func _DomainEvents_InsertDomainEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertDomainEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainEventsServer).InsertDomainEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DomainEvents/InsertDomainEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainEventsServer).InsertDomainEvent(ctx, req.(*InsertDomainEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DomainEvents_Scan_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DomainEventsServer).Scan(&domainEventsScanServer{stream})
}

type DomainEvents_ScanServer interface {
	Send(*ScanResponse) error
	Recv() (*ScanRequest, error)
	grpc.ServerStream
}

type domainEventsScanServer struct {
	grpc.ServerStream
}

func (x *domainEventsScanServer) Send(m *ScanResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *domainEventsScanServer) Recv() (*ScanRequest, error) {
	m := new(ScanRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DomainEvents_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DomainEvents",
	HandlerType: (*DomainEventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertDomainEvent",
			Handler:    _DomainEvents_InsertDomainEvent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Scan",
			Handler:       _DomainEvents_Scan_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "sys/rpc-domainevents/pb/protos.proto",
}
